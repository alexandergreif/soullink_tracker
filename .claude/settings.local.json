{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "mcp__Ref__ref_search_documentation",
      "mcp__Ref__ref_read_url",
      "Bash(mkdir:*)",
      "Bash(python -m pytest tests/unit/test_models.py -v)",
      "Bash(python3 -m pytest tests/unit/test_models.py -v)",
      "Bash(pip3 install:*)",
      "Bash(python3:*)",
      "mcp__RepoPrompt__get_file_tree",
      "mcp__RepoPrompt__read_file",
      "mcp__RepoPrompt__search",
      "mcp__RepoPrompt__file_actions",
      "mcp__RepoPrompt__apply_edits",
      "Bash(python -m pytest tests/unit/test_api_runs.py -v)",
      "Bash(source:*)",
      "Bash(python -m pytest tests/unit/test_api_events.py::TestEventsAPI::test_encounter_event_success -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_events.py -v --no-cov -x)",
      "Bash(python -m pytest tests/unit/test_api_events.py::TestEventsAPI::test_event_idempotency -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_events.py -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_data.py::TestDataAPI::test_get_encounters_success -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_data.py -v --no-cov)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(python -m pytest tests/unit/test_api_*.py -v --no-cov)",
      "mcp__RepoPrompt__manage_selection",
      "mcp__playwright__browser_take_screenshot",
      "Bash(git commit:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "mcp__playwright__browser_navigate",
      "WebFetch(domain:github.com)",
      "mcp__RepoPrompt__get_code_structure",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git tag:*)",
      "mcp__RepoPrompt__read_selected_files",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(pipx install:*)",
      "Bash(touch:*)",
      "Bash(python -m pytest tests/unit/test_api_events.py -k \"test_encounter_event_success or test_event_unauthorized or test_event_wrong_player\" --tb=short -v)",
      "Bash(python -m pytest tests/unit/test_middleware.py -v --tb=short)",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "Bash(python -m pytest \"tests/integration/test_projection_engine.py::TestProjectionEngineCorrectness::test_rebuild_projections_matches_direct_application\" -xvs)",
      "Bash(python -m pytest tests/integration/test_projection_graceful_errors.py -xvs --tb=long)"
    ],
    "deny": []
  }
}