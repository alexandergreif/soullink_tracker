{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "mcp__Ref__ref_search_documentation",
      "mcp__Ref__ref_read_url",
      "Bash(mkdir:*)",
      "Bash(python -m pytest tests/unit/test_models.py -v)",
      "Bash(python3 -m pytest tests/unit/test_models.py -v)",
      "Bash(pip3 install:*)",
      "Bash(python3:*)",
      "mcp__RepoPrompt__get_file_tree",
      "mcp__RepoPrompt__read_file",
      "mcp__RepoPrompt__search",
      "mcp__RepoPrompt__file_actions",
      "mcp__RepoPrompt__apply_edits",
      "Bash(python -m pytest tests/unit/test_api_runs.py -v)",
      "Bash(source:*)",
      "Bash(python -m pytest tests/unit/test_api_events.py::TestEventsAPI::test_encounter_event_success -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_events.py -v --no-cov -x)",
      "Bash(python -m pytest tests/unit/test_api_events.py::TestEventsAPI::test_event_idempotency -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_events.py -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_data.py::TestDataAPI::test_get_encounters_success -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_api_data.py -v --no-cov)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(python -m pytest tests/unit/test_api_*.py -v --no-cov)",
      "mcp__RepoPrompt__manage_selection",
      "mcp__playwright__browser_take_screenshot",
      "Bash(git commit:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "mcp__playwright__browser_navigate",
      "WebFetch(domain:github.com)",
      "mcp__RepoPrompt__get_code_structure",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git tag:*)",
      "mcp__RepoPrompt__read_selected_files",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(pipx install:*)",
      "Bash(touch:*)",
      "Bash(python -m pytest tests/unit/test_api_events.py -k \"test_encounter_event_success or test_event_unauthorized or test_event_wrong_player\" --tb=short -v)",
      "Bash(python -m pytest tests/unit/test_middleware.py -v --tb=short)",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "Bash(python -m pytest \"tests/integration/test_projection_engine.py::TestProjectionEngineCorrectness::test_rebuild_projections_matches_direct_application\" -xvs)",
      "Bash(python -m pytest tests/integration/test_projection_graceful_errors.py -xvs --tb=long)",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_tab_new",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_tab_select",
      "mcp__playwright__browser_tab_close",
      "mcp__semgrep__security_check",
      "mcp__RepoPrompt__request_plan",
      "mcp__archon__list_projects",
      "mcp__archon__get_project",
      "mcp__archon__list_tasks",
      "Bash(pytest:*)",
      "Bash(python -m pytest --tb=no -q)",
      "mcp__archon__update_project",
      "mcp__archon__create_task",
      "mcp__archon__health_check",
      "mcp__archon__session_info",
      "Bash(python -m pytest tests/unit/test_api_events.py::test_process_event_encounter -v)",
      "Bash(cat:*)",
      "mcp__archon__perform_rag_query",
      "mcp__archon__search_code_examples",
      "mcp__archon__update_task",
      "mcp__archon__get_task",
      "mcp__archon__get_available_sources",
      "Bash(python -m pytest tests/e2e/test_complete_pipeline.py::TestPipelineIntegration::test_api_websocket_integration -v --no-cov)",
      "Bash(python -m pytest tests/unit/test_schema_compatibility.py -v --no-cov)",
      "Bash(python:*)",
      "mcp__RepoPrompt__get_selected_code_structure",
      "Bash(ruff check:*)",
      "Read(//Users/alexandergreif/Downloads/20250823_212605/**)",
      "Read(//Users/alexandergreif/Downloads/20250823_212602/**)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov -x -q tests/unit/test_api_data.py::TestDataAPI::test_get_encounters_success)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov -x -q tests/unit/test_api_data.py::TestDataAPI::test_get_encounters_with_filters)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov -q tests/unit/test_api_data.py)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov -x tests/unit/test_rules_engine.py)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov -x -q tests/unit/test_rules_engine.py::TestRulesEngine::test_should_skip_dupe_encounter_different_route)",
      "Bash(PYTHONPATH=src python3 -m pytest --tb=short -v tests/unit/test_models.py -k \"test_basic\")",
      "Bash(PYTHONPATH=src python3 -m pytest tests/unit/test_models.py::test_run_model -xvs)",
      "Bash(PYTHONPATH=src python3 -m pytest tests/unit/test_models.py::TestRunModel::test_run_creation -xvs)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov tests/unit/test_models.py -q)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov tests/unit/ -q)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov tests/unit/test_admin_dashboard.py::TestAdminRebuildProjections::test_rebuild_projections_requires_v3_eventstore -xvs)",
      "Bash(PYTHONPATH=src timeout 60 python3 -m pytest --no-cov tests/unit/ -q --tb=no)",
      "Bash(PYTHONPATH=src python3 -m pytest --no-cov tests/unit/test_models.py tests/unit/test_repositories.py tests/unit/test_auth.py -q)",
      "Read(//Users/alexandergreif/Downloads/logs (1)/**)",
      "Read(//Users/alexandergreif/Downloads/**)"
    ],
    "deny": []
  }
}